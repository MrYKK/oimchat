<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.only</groupId>
    <artifactId>oim-fx</artifactId>
    <version>1.0.1</version>
    <packaging>jar</packaging>

    <name>oim-fx</name>
    <url>https://gitee.com/onlysoftware/oim-fx</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.8</jdk.version>
        <slf4j.version>1.7.21</slf4j.version>
		<log4j.version>2.8.2</log4j.version>
    </properties>

    <dependencies>
    
    	<!-- only start 
        <dependency>
            <groupId>com.only</groupId>
            <artifactId>only-feel</artifactId>
            <version>1.0.1</version>
        </dependency>
        -->
        <!-- only end -->
        
        <!-- oim start -->
        <dependency>
            <groupId>com.only</groupId>
            <artifactId>oim-client-resources</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.only</groupId>
            <artifactId>oim-client-ui-fx</artifactId>
            <version>0.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.only</groupId>
            <artifactId>oim-face</artifactId>
            <version>0.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.only</groupId>
            <artifactId>oim-client-core</artifactId>
            <version>1.0.1</version>
            <exclusions>
            	<exclusion>
            		<groupId>xml-apis</groupId>
            		<artifactId>xml-apis</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>
        <!-- oim end -->
        
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz-jobs</artifactId>
            <version>2.2.1</version>
        </dependency>
		<dependency>
		    <groupId>com.kcthota</groupId>
		    <artifactId>emoji4j</artifactId>
		    <version>5.0</version>
		</dependency>

		<dependency>
		  <groupId>com.github.binarywang</groupId>
		  <artifactId>java-emoji-converter</artifactId>
		  <version>0.1.1</version>
		</dependency>
		
		<!-- log start -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		-->
		<!-- log4j -->
	
		<!--
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		-->

		<!-- log配置：Log4j2 + Slf4j -->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-api</artifactId>
		    <version>${log4j.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>${log4j.version}</version>
		</dependency>
		<dependency> <!-- 桥接：告诉Slf4j使用Log4j2 -->
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j-impl</artifactId>
		    <version>${log4j.version}</version>
		</dependency>
		<dependency> <!-- 桥接：告诉commons logging使用Log4j2 -->
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-jcl</artifactId>
		    <version>${log4j.version}</version>
		</dependency>

		<!-- log end -->

    </dependencies>
    <build>
        <finalName>oim</finalName>
        <plugins>
            
            <!-- clean插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
			
			<!-- 忽略Junit测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            
			<!-- compiler插件, 设定JDK版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>UTF8</encoding>
					<showWarnings>true</showWarnings>
					<!-- <compilerArgs> 
			            <arg>-verbose</arg>
			            <arg>-Xlint:unchecked</arg>
			            <arg>-Xlint:deprecation</arg>
			            <arg>-bootclasspath</arg>
			            <arg>${env.JAVA_HOME}/jre/lib</arg>
			            <arg>-extdirs</arg> 
			            <arg>${project.basedir}/lib</arg>
			        </compilerArgs> -->
			        <!-- 3.1以前配置  指定外部lib
                    <compilerArguments>
						<extdirs>lib</extdirs>
						<verbose />
						<bootclasspath>${java.home}/lib/rt.jar:${java.home}/lib/jce.jar</bootclasspath>
					</compilerArguments>
					-->
				</configuration>
			</plugin>
			
			<!-- resource插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>

			<!-- install插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>

			<!-- dependency插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.2</version>
			</plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <!-- Manifest specific configuration -->
                        <manifest>
                            <!-- 是否要把第三方jar放到manifest的classpath中  -->
                            <addClasspath>true</addClasspath>
                            <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/  -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- 应用的main class -->
                            <mainClass>com.oim.fx.app.AppStartup</mainClass>
                        </manifest>
                    </archive>
                    <!-- 过滤掉不希望包含在jar中的文件  -->
                    <excludes>
                        <exclude>${project.basedir}/xml/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- The configuration of maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Specifies the configuration file of the assembly plugin -->
                    <descriptors>
                        <descriptor>src/main/assembly/package.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
